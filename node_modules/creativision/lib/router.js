//路由控制器  //所有涉及到RUNTIME的是运行时态可以先定义再在配置中赋值
o2c.runtime.router = function(req,res){
  //method->req.method
  //基于method控制restful
  var method = req.method.toLocaleLowerCase();
  var url= req.url;
  if('get'==method){
  	if(o2c.isstatic(req.url)){res.sendfile(req.url);}
  	else{check(o2c.router.a[url],req,res);};
  };
  if('post'==method){check(o2c.router.b[url],req,res);};
  if('put'==method){check(o2c.router.c[url],req,res);};
  if('delete'==method){check(o2c.router.d[url],req,res);};
}

//提供的注册方法->GLOBAL注册  1阶段，2阶段改
o2c.router = function(method,url,func){
  if('get'==method){o2c.router.a[url]=func};
  if('post'==method){o2c.router.b[url]=func};
  if('put'==method){o2c.router.c[url]=func};
  if('delete'==method){o2c.router.d[url]=func};
};
//注册
//池
o2c.router.a = {};
o2c.router.b = {};
o2c.router.c = {};
o2c.router.d = {};

//开发者API
o2c.router.get = function(url,func){
  o2c.router('get',url,func);
};

o2c.router.post = function(url,func){
  o2c.router('post',url,func);
};

o2c.router.put = function(url,func){
  o2c.router('put',url,func);
};

o2c.router.delete = function(url,func){
  o2c.router('delete',url,func);
};

//辅助函数，路由表没有的话404
function check (key,req,res){
  if(key){key(req,res)}
  //404方法以后再添加
  else{res.end();}
}

//静态路由方法
o2c.static = function(path){
  if('/'!==path.substr(-1)){path = path + '/';};
  o2c.static.k = path;
}

o2c.static.k = 'default';

o2c.isstatic = function(path){
  if(0==path.indexOf(o2c.static.k)){return true;}
  else{return false;};
}